<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dynamic Data Display</title>
  <style>
    .matchItem {
      border: 1px solid #ccc;
      border-radius: 5px;
      padding: 10px;
      margin-bottom: 20px;
      background-color: #f9f9f9;
    }

    .matchItem h3 {
      margin-top: 0;
      color: #333;
      font-size: 20px;
    }

    .matchItem p {
      margin: 5px 0;
      color: #666;
    }z

    .teamName {
      font-weight: bold;
      color: #333;
    }

    .score {
      font-weight: bold;
      color: #009900; 
    }

    .status {
      font-weight: bold;
      color: #ff0000; 
    }
  </style>
</head>
<body>
  <div id="dataDisplay"></div>
 
  <script>
   
    const fetchData = async () => {
      try {
        const url = 'https://free-cricket-live-score1.p.rapidapi.com/matches';
        const options = {
          method: 'GET',
          headers: {
            'X-RapidAPI-Key': 'a0cd402e1emshd0ee266afa8f77bp1e418cjsn4f4b411506fa',
            'X-RapidAPI-Host': 'free-cricket-live-score1.p.rapidapi.com'
          }
        };

        
        const response = await fetch(url, options);
 
       
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
 
       
        const data = await response.json();

        console.log('Data received:', data);

       
        function displayData(data) {
          let dataDisplay = '';

          
          if (data && data.res && Array.isArray(data.res.matches) && data.res.matches.length > 0) {
           
            data.res.matches.forEach(match => {

              dataDisplay += `<div class="matchItem">
                                <h1> Match results </h1>
                                <p>League : ${match.srs}</p>
                                <p>${match.teams.t1.name} vs ${match.teams.t2.name}</p>
                                <p>Score: ${match.teams.t1.score} - ${match.teams.t2.score}</p>
                                <p>Status: ${match.matchStatus}</p>
                                <p>Time: ${new Date(match.time * 1000)}</p>
                                
                              </div>`;
            });
          } else {
           
            dataDisplay = 'Error: No data available or data format is not as expected';
          }

          
          document.getElementById('dataDisplay').innerHTML = dataDisplay;
        }

       
        displayData(data);
      } catch (error) {
        
        console.error('Error fetching data:', error);
      }
    };

   
    fetchData();
  </script>
</body>
</html>
